INFO - Pipeline initialized in 3.361701965332031e-05 seconds - pipeline
INFO - Pipeline initialized in 3.361701965332031e-05 seconds - pipeline
INFO - Prompt added to pipeline in 0.0035729408264160156 seconds - pipeline
INFO - Prompt added to pipeline in 0.0035729408264160156 seconds - pipeline
INFO - Loading llama-3-8B model - models
INFO - Loading llama-3-8B model - models
INFO - LLM added to pipeline in 197.02829599380493 seconds - pipeline
INFO - LLM added to pipeline in 197.02829599380493 seconds - pipeline
INFO - Pipeline connected in 5.2928924560546875e-05 seconds - pipeline
INFO - Pipeline connected in 5.2928924560546875e-05 seconds - pipeline
INFO - Pipeline warmup in 1.0416672229766846 seconds - assistant
INFO - Pipeline warmup in 1.0416672229766846 seconds - assistant
INFO - Pipeline run in 16.604767084121704 seconds - assistant
INFO - Pipeline run in 16.604767084121704 seconds - assistant
INFO - Reply: Omeprazole - assistant
INFO - Reply: Omeprazole - assistant
INFO - Meta: [{'id': 'cmpl-46c1a306-642b-4541-aa53-7a6e42ad223c', 'object': 'text_completion', 'created': 1722590060, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}] - assistant
INFO - Meta: [{'id': 'cmpl-46c1a306-642b-4541-aa53-7a6e42ad223c', 'object': 'text_completion', 'created': 1722590060, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}] - assistant
INFO - Complete run in 214.68143320083618 seconds - assistant
INFO - Complete run in 214.68143320083618 seconds - assistant
INFO - LLM Output: {'reply': 'Omeprazole', 'meta': [{'id': 'cmpl-46c1a306-642b-4541-aa53-7a6e42ad223c', 'object': 'text_completion', 'created': 1722590060, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}]} - assistant
INFO - LLM Output: {'reply': 'Omeprazole', 'meta': [{'id': 'cmpl-46c1a306-642b-4541-aa53-7a6e42ad223c', 'object': 'text_completion', 'created': 1722590060, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}]} - assistant
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Omeprazole'] - OMOP_match
INFO - Calculating best OMOP matches for ['Omeprazole'] - OMOP_match
INFO - Best OMOP matches for ['Omeprazole'] calculated - OMOP_match
INFO - Best OMOP matches for ['Omeprazole'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Omeprazole', 'CONCEPT': [{'concept_name': 'omeprazole', 'concept_id': 923645, 'vocabulary_id': 'RxNorm', 'concept_code': '7646', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Omeprazole', 'CONCEPT': [{'concept_name': 'omeprazole', 'concept_id': 923645, 'vocabulary_id': 'RxNorm', 'concept_code': '7646', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Pipeline initialized in 4.363059997558594e-05 seconds - pipeline
INFO - Pipeline initialized in 4.363059997558594e-05 seconds - pipeline
INFO - Prompt added to pipeline in 0.004837989807128906 seconds - pipeline
INFO - Prompt added to pipeline in 0.004837989807128906 seconds - pipeline
INFO - Loading llama-3-8B model - models
INFO - Loading llama-3-8B model - models
INFO - LLM added to pipeline in 0.3514289855957031 seconds - pipeline
INFO - LLM added to pipeline in 0.3514289855957031 seconds - pipeline
INFO - Pipeline connected in 6.699562072753906e-05 seconds - pipeline
INFO - Pipeline connected in 6.699562072753906e-05 seconds - pipeline
INFO - Pipeline warmup in 1.3264236450195312 seconds - assistant
INFO - Pipeline warmup in 1.3264236450195312 seconds - assistant
INFO - Pipeline run in 16.88734531402588 seconds - assistant
INFO - Pipeline run in 16.88734531402588 seconds - assistant
INFO - Reply: Omeprazole - assistant
INFO - Reply: Omeprazole - assistant
INFO - Meta: [{'id': 'cmpl-4fda345d-627d-49f6-99ab-c33e73fd25ea', 'object': 'text_completion', 'created': 1722602146, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}] - assistant
INFO - Meta: [{'id': 'cmpl-4fda345d-627d-49f6-99ab-c33e73fd25ea', 'object': 'text_completion', 'created': 1722602146, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}] - assistant
INFO - LLM Output: {'reply': 'Omeprazole', 'informal_name': 'Ompo', 'meta': [{'id': 'cmpl-4fda345d-627d-49f6-99ab-c33e73fd25ea', 'object': 'text_completion', 'created': 1722602146, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}]} - assistant
INFO - LLM Output: {'reply': 'Omeprazole', 'informal_name': 'Ompo', 'meta': [{'id': 'cmpl-4fda345d-627d-49f6-99ab-c33e73fd25ea', 'object': 'text_completion', 'created': 1722602146, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}]} - assistant
INFO - Pipeline run in 27.653768062591553 seconds - assistant
INFO - Pipeline run in 27.653768062591553 seconds - assistant
INFO - Reply: Betamethasone
```
## Solution 1
```
import re

def get_medication_name(informal_name):
    formal_name = re.findall(r'\b[A-Z][a-z]*\b', informal_name)
    return formal_name[0]

informal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']
for informal_name in informal_names:
    print(get_medication_name(informal_name))
```
## Output
```
Acetaminophen
Ibuprofen
Ibuprofen
Nap - assistant
INFO - Reply: Betamethasone
```
## Solution 1
```
import re

def get_medication_name(informal_name):
    formal_name = re.findall(r'\b[A-Z][a-z]*\b', informal_name)
    return formal_name[0]

informal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']
for informal_name in informal_names:
    print(get_medication_name(informal_name))
```
## Output
```
Acetaminophen
Ibuprofen
Ibuprofen
Nap - assistant
INFO - Meta: [{'id': 'cmpl-26228ceb-0a1d-4cb3-a195-d3fc0d7238fc', 'object': 'text_completion', 'created': 1722602162, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': " Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'index': 0, 'logprobs': None, 'finish_reason': 'length'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 128, 'total_tokens': 237}}] - assistant
INFO - Meta: [{'id': 'cmpl-26228ceb-0a1d-4cb3-a195-d3fc0d7238fc', 'object': 'text_completion', 'created': 1722602162, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': " Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'index': 0, 'logprobs': None, 'finish_reason': 'length'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 128, 'total_tokens': 237}}] - assistant
INFO - LLM Output: {'reply': "Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'informal_name': 'Betnovate Scalp Application', 'meta': [{'id': 'cmpl-26228ceb-0a1d-4cb3-a195-d3fc0d7238fc', 'object': 'text_completion', 'created': 1722602162, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': " Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'index': 0, 'logprobs': None, 'finish_reason': 'length'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 128, 'total_tokens': 237}}]} - assistant
INFO - LLM Output: {'reply': "Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'informal_name': 'Betnovate Scalp Application', 'meta': [{'id': 'cmpl-26228ceb-0a1d-4cb3-a195-d3fc0d7238fc', 'object': 'text_completion', 'created': 1722602162, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': " Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'index': 0, 'logprobs': None, 'finish_reason': 'length'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 128, 'total_tokens': 237}}]} - assistant
INFO - Complete run in 46.229454040527344 seconds - assistant
INFO - Complete run in 46.229454040527344 seconds - assistant
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Omeprazole'] - OMOP_match
INFO - Calculating best OMOP matches for ['Omeprazole'] - OMOP_match
INFO - Best OMOP matches for ['Omeprazole'] calculated - OMOP_match
INFO - Best OMOP matches for ['Omeprazole'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Omeprazole', 'CONCEPT': [{'concept_name': 'omeprazole', 'concept_id': 923645, 'vocabulary_id': 'RxNorm', 'concept_code': '7646', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Omeprazole', 'CONCEPT': [{'concept_name': 'omeprazole', 'concept_id': 923645, 'vocabulary_id': 'RxNorm', 'concept_code': '7646', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ["Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap"] - OMOP_match
INFO - Calculating best OMOP matches for ["Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap"] - OMOP_match
INFO - Best OMOP matches for ["Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap"] calculated - OMOP_match
INFO - Best OMOP matches for ["Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap"] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': "Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'CONCEPT': []}] - OMOP_match
INFO - OMOP Output: [{'search_term': "Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'CONCEPT': []}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Pipeline initialized in 2.6226043701171875e-05 seconds - pipeline
INFO - Pipeline initialized in 2.6226043701171875e-05 seconds - pipeline
INFO - Prompt added to pipeline in 0.0025119781494140625 seconds - pipeline
INFO - Prompt added to pipeline in 0.0025119781494140625 seconds - pipeline
INFO - Loading llama-3-8B model - models
INFO - Loading llama-3-8B model - models
INFO - LLM added to pipeline in 0.2803928852081299 seconds - pipeline
INFO - LLM added to pipeline in 0.2803928852081299 seconds - pipeline
INFO - Pipeline connected in 4.673004150390625e-05 seconds - pipeline
INFO - Pipeline connected in 4.673004150390625e-05 seconds - pipeline
INFO - Pipeline warmup in 1.1714320182800293 seconds - assistant
INFO - Pipeline warmup in 1.1714320182800293 seconds - assistant
INFO - Pipeline run in 12.133697748184204 seconds - assistant
INFO - Pipeline run in 12.133697748184204 seconds - assistant
INFO - Reply: Paracetamol - assistant
INFO - Reply: Paracetamol - assistant
INFO - Meta: [{'id': 'cmpl-85a4bda8-531a-4b83-83ea-539b266aaff5', 'object': 'text_completion', 'created': 1722602537, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Paracetamol\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 105, 'completion_tokens': 5, 'total_tokens': 110}}] - assistant
INFO - Meta: [{'id': 'cmpl-85a4bda8-531a-4b83-83ea-539b266aaff5', 'object': 'text_completion', 'created': 1722602537, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Paracetamol\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 105, 'completion_tokens': 5, 'total_tokens': 110}}] - assistant
INFO - LLM Output: {'reply': 'Paracetamol', 'informal_name': 'Panadol', 'meta': [{'id': 'cmpl-85a4bda8-531a-4b83-83ea-539b266aaff5', 'object': 'text_completion', 'created': 1722602537, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Paracetamol\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 105, 'completion_tokens': 5, 'total_tokens': 110}}]} - assistant
INFO - LLM Output: {'reply': 'Paracetamol', 'informal_name': 'Panadol', 'meta': [{'id': 'cmpl-85a4bda8-531a-4b83-83ea-539b266aaff5', 'object': 'text_completion', 'created': 1722602537, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Paracetamol\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 105, 'completion_tokens': 5, 'total_tokens': 110}}]} - assistant
INFO - Pipeline run in 29.90387201309204 seconds - assistant
INFO - Pipeline run in 29.90387201309204 seconds - assistant
INFO - Reply: Betamethasone
```
## Solution 1
```
import re

def get_medication_name(informal_name):
    formal_name = re.findall(r'\b[A-Z][a-z]*\b', informal_name)
    return formal_name[0]

informal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']
for informal_name in informal_names:
    print(get_medication_name(informal_name))
```
## Output
```
Acetaminophen
Ibuprofen
Ibuprofen
Nap - assistant
INFO - Reply: Betamethasone
```
## Solution 1
```
import re

def get_medication_name(informal_name):
    formal_name = re.findall(r'\b[A-Z][a-z]*\b', informal_name)
    return formal_name[0]

informal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']
for informal_name in informal_names:
    print(get_medication_name(informal_name))
```
## Output
```
Acetaminophen
Ibuprofen
Ibuprofen
Nap - assistant
INFO - Meta: [{'id': 'cmpl-f5b1c487-4836-471c-ad6a-2d8f527ca866', 'object': 'text_completion', 'created': 1722602549, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': " Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'index': 0, 'logprobs': None, 'finish_reason': 'length'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 128, 'total_tokens': 237}}] - assistant
INFO - Meta: [{'id': 'cmpl-f5b1c487-4836-471c-ad6a-2d8f527ca866', 'object': 'text_completion', 'created': 1722602549, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': " Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'index': 0, 'logprobs': None, 'finish_reason': 'length'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 128, 'total_tokens': 237}}] - assistant
INFO - LLM Output: {'reply': "Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'informal_name': 'Betnovate Scalp Application', 'meta': [{'id': 'cmpl-f5b1c487-4836-471c-ad6a-2d8f527ca866', 'object': 'text_completion', 'created': 1722602549, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': " Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'index': 0, 'logprobs': None, 'finish_reason': 'length'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 128, 'total_tokens': 237}}]} - assistant
INFO - LLM Output: {'reply': "Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'informal_name': 'Betnovate Scalp Application', 'meta': [{'id': 'cmpl-f5b1c487-4836-471c-ad6a-2d8f527ca866', 'object': 'text_completion', 'created': 1722602549, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': " Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'index': 0, 'logprobs': None, 'finish_reason': 'length'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 128, 'total_tokens': 237}}]} - assistant
INFO - Pipeline run in 1.3861689567565918 seconds - assistant
INFO - Pipeline run in 1.3861689567565918 seconds - assistant
INFO - Reply: Fish oil - assistant
INFO - Reply: Fish oil - assistant
INFO - Meta: [{'id': 'cmpl-992188ce-0636-45eb-a419-3fe53890f85c', 'object': 'text_completion', 'created': 1722602579, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Fish oil\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 108, 'completion_tokens': 3, 'total_tokens': 111}}] - assistant
INFO - Meta: [{'id': 'cmpl-992188ce-0636-45eb-a419-3fe53890f85c', 'object': 'text_completion', 'created': 1722602579, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Fish oil\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 108, 'completion_tokens': 3, 'total_tokens': 111}}] - assistant
INFO - LLM Output: {'reply': 'Fish oil', 'informal_name': 'Now Foods Omega-3', 'meta': [{'id': 'cmpl-992188ce-0636-45eb-a419-3fe53890f85c', 'object': 'text_completion', 'created': 1722602579, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Fish oil\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 108, 'completion_tokens': 3, 'total_tokens': 111}}]} - assistant
INFO - LLM Output: {'reply': 'Fish oil', 'informal_name': 'Now Foods Omega-3', 'meta': [{'id': 'cmpl-992188ce-0636-45eb-a419-3fe53890f85c', 'object': 'text_completion', 'created': 1722602579, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Fish oil\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 108, 'completion_tokens': 3, 'total_tokens': 111}}]} - assistant
INFO - Pipeline run in 1.7088279724121094 seconds - assistant
INFO - Pipeline run in 1.7088279724121094 seconds - assistant
INFO - Reply: Omeprazole - assistant
INFO - Reply: Omeprazole - assistant
INFO - Meta: [{'id': 'cmpl-06ae9fd2-d03c-4300-9041-75290b740f0b', 'object': 'text_completion', 'created': 1722602580, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}] - assistant
INFO - Meta: [{'id': 'cmpl-06ae9fd2-d03c-4300-9041-75290b740f0b', 'object': 'text_completion', 'created': 1722602580, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}] - assistant
INFO - LLM Output: {'reply': 'Omeprazole', 'informal_name': 'Ompo', 'meta': [{'id': 'cmpl-06ae9fd2-d03c-4300-9041-75290b740f0b', 'object': 'text_completion', 'created': 1722602580, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}]} - assistant
INFO - LLM Output: {'reply': 'Omeprazole', 'informal_name': 'Ompo', 'meta': [{'id': 'cmpl-06ae9fd2-d03c-4300-9041-75290b740f0b', 'object': 'text_completion', 'created': 1722602580, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}]} - assistant
INFO - Complete run in 46.592183113098145 seconds - assistant
INFO - Complete run in 46.592183113098145 seconds - assistant
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Paracetamol'] - OMOP_match
INFO - Calculating best OMOP matches for ['Paracetamol'] - OMOP_match
INFO - Best OMOP matches for ['Paracetamol'] calculated - OMOP_match
INFO - Best OMOP matches for ['Paracetamol'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Paracetamol', 'CONCEPT': None}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Paracetamol', 'CONCEPT': None}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ["Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap"] - OMOP_match
INFO - Calculating best OMOP matches for ["Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap"] - OMOP_match
INFO - Best OMOP matches for ["Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap"] calculated - OMOP_match
INFO - Best OMOP matches for ["Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap"] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': "Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'CONCEPT': []}] - OMOP_match
INFO - OMOP Output: [{'search_term': "Betamethasone\n```\n## Solution 1\n```\nimport re\n\ndef get_medication_name(informal_name):\n    formal_name = re.findall(r'\\b[A-Z][a-z]*\\b', informal_name)\n    return formal_name[0]\n\ninformal_names = ['Tylenol', 'Advil', 'Motrin', 'Aleve', 'Betnovate Scalp Application']\nfor informal_name in informal_names:\n    print(get_medication_name(informal_name))\n```\n## Output\n```\nAcetaminophen\nIbuprofen\nIbuprofen\nNap", 'CONCEPT': []}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Fish oil'] - OMOP_match
INFO - Calculating best OMOP matches for ['Fish oil'] - OMOP_match
INFO - Best OMOP matches for ['Fish oil'] calculated - OMOP_match
INFO - Best OMOP matches for ['Fish oil'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Fish oil', 'CONCEPT': [{'concept_name': 'fish oils', 'concept_id': 19110701, 'vocabulary_id': 'RxNorm', 'concept_code': '4419', 'concept_name_similarity_score': 94.11764705882352, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'fish oil (containing omega-3 acids)', 'concept_id': 35200165, 'vocabulary_id': 'RxNorm', 'concept_code': '2053495', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Fish oil', 'CONCEPT': [{'concept_name': 'fish oils', 'concept_id': 19110701, 'vocabulary_id': 'RxNorm', 'concept_code': '4419', 'concept_name_similarity_score': 94.11764705882352, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'fish oil (containing omega-3 acids)', 'concept_id': 35200165, 'vocabulary_id': 'RxNorm', 'concept_code': '2053495', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Omeprazole'] - OMOP_match
INFO - Calculating best OMOP matches for ['Omeprazole'] - OMOP_match
INFO - Best OMOP matches for ['Omeprazole'] calculated - OMOP_match
INFO - Best OMOP matches for ['Omeprazole'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Omeprazole', 'CONCEPT': [{'concept_name': 'omeprazole', 'concept_id': 923645, 'vocabulary_id': 'RxNorm', 'concept_code': '7646', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Omeprazole', 'CONCEPT': [{'concept_name': 'omeprazole', 'concept_id': 923645, 'vocabulary_id': 'RxNorm', 'concept_code': '7646', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Pipeline initialized in 5.2928924560546875e-05 seconds - pipeline
INFO - Pipeline initialized in 5.2928924560546875e-05 seconds - pipeline
INFO - Prompt added to pipeline in 0.002618074417114258 seconds - pipeline
INFO - Prompt added to pipeline in 0.002618074417114258 seconds - pipeline
INFO - Loading llama-3-8B model - models
INFO - Loading llama-3-8B model - models
INFO - LLM added to pipeline in 0.6976737976074219 seconds - pipeline
INFO - LLM added to pipeline in 0.6976737976074219 seconds - pipeline
INFO - Pipeline connected in 0.0001010894775390625 seconds - pipeline
INFO - Pipeline connected in 0.0001010894775390625 seconds - pipeline
INFO - Pipeline warmup in 1.2545089721679688 seconds - assistant
INFO - Pipeline warmup in 1.2545089721679688 seconds - assistant
INFO - Pipeline run in 20.29961919784546 seconds - assistant
INFO - Pipeline run in 20.29961919784546 seconds - assistant
INFO - Reply: Paracetamol - assistant
INFO - Reply: Paracetamol - assistant
INFO - Meta: [{'id': 'cmpl-2dddc91f-88bb-43ef-929b-5ccbf0380b14', 'object': 'text_completion', 'created': 1722603715, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Paracetamol\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}] - assistant
INFO - Meta: [{'id': 'cmpl-2dddc91f-88bb-43ef-929b-5ccbf0380b14', 'object': 'text_completion', 'created': 1722603715, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Paracetamol\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}] - assistant
INFO - LLM Output: {'reply': 'Paracetamol', 'informal_name': 'Panadol', 'meta': [{'id': 'cmpl-2dddc91f-88bb-43ef-929b-5ccbf0380b14', 'object': 'text_completion', 'created': 1722603715, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Paracetamol\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}]} - assistant
INFO - LLM Output: {'reply': 'Paracetamol', 'informal_name': 'Panadol', 'meta': [{'id': 'cmpl-2dddc91f-88bb-43ef-929b-5ccbf0380b14', 'object': 'text_completion', 'created': 1722603715, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Paracetamol\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 106, 'completion_tokens': 5, 'total_tokens': 111}}]} - assistant
INFO - Pipeline run in 3.3312301635742188 seconds - assistant
INFO - Pipeline run in 3.3312301635742188 seconds - assistant
INFO - Reply: Betamethasone - assistant
INFO - Reply: Betamethasone - assistant
INFO - Meta: [{'id': 'cmpl-8d949189-e4d7-4c7d-8561-9dc1b1565e5b', 'object': 'text_completion', 'created': 1722603736, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Betamethasone\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 110, 'completion_tokens': 6, 'total_tokens': 116}}] - assistant
INFO - Meta: [{'id': 'cmpl-8d949189-e4d7-4c7d-8561-9dc1b1565e5b', 'object': 'text_completion', 'created': 1722603736, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Betamethasone\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 110, 'completion_tokens': 6, 'total_tokens': 116}}] - assistant
INFO - LLM Output: {'reply': 'Betamethasone', 'informal_name': 'Betnovate Scalp Application', 'meta': [{'id': 'cmpl-8d949189-e4d7-4c7d-8561-9dc1b1565e5b', 'object': 'text_completion', 'created': 1722603736, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Betamethasone\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 110, 'completion_tokens': 6, 'total_tokens': 116}}]} - assistant
INFO - LLM Output: {'reply': 'Betamethasone', 'informal_name': 'Betnovate Scalp Application', 'meta': [{'id': 'cmpl-8d949189-e4d7-4c7d-8561-9dc1b1565e5b', 'object': 'text_completion', 'created': 1722603736, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Betamethasone\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 110, 'completion_tokens': 6, 'total_tokens': 116}}]} - assistant
INFO - Pipeline run in 1.9141809940338135 seconds - assistant
INFO - Pipeline run in 1.9141809940338135 seconds - assistant
INFO - Reply: Fish Oil - assistant
INFO - Reply: Fish Oil - assistant
INFO - Meta: [{'id': 'cmpl-fec0ff33-1e55-4788-8801-32c951214b40', 'object': 'text_completion', 'created': 1722603739, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Fish Oil\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 3, 'total_tokens': 112}}] - assistant
INFO - Meta: [{'id': 'cmpl-fec0ff33-1e55-4788-8801-32c951214b40', 'object': 'text_completion', 'created': 1722603739, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Fish Oil\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 3, 'total_tokens': 112}}] - assistant
INFO - LLM Output: {'reply': 'Fish Oil', 'informal_name': 'Now Foods Omega-3', 'meta': [{'id': 'cmpl-fec0ff33-1e55-4788-8801-32c951214b40', 'object': 'text_completion', 'created': 1722603739, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Fish Oil\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 3, 'total_tokens': 112}}]} - assistant
INFO - LLM Output: {'reply': 'Fish Oil', 'informal_name': 'Now Foods Omega-3', 'meta': [{'id': 'cmpl-fec0ff33-1e55-4788-8801-32c951214b40', 'object': 'text_completion', 'created': 1722603739, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Fish Oil\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 109, 'completion_tokens': 3, 'total_tokens': 112}}]} - assistant
INFO - Pipeline run in 2.170036792755127 seconds - assistant
INFO - Pipeline run in 2.170036792755127 seconds - assistant
INFO - Reply: Omeprazole - assistant
INFO - Reply: Omeprazole - assistant
INFO - Meta: [{'id': 'cmpl-a3e24cdb-531d-4a13-b119-9d1f64b854ec', 'object': 'text_completion', 'created': 1722603741, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 107, 'completion_tokens': 5, 'total_tokens': 112}}] - assistant
INFO - Meta: [{'id': 'cmpl-a3e24cdb-531d-4a13-b119-9d1f64b854ec', 'object': 'text_completion', 'created': 1722603741, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 107, 'completion_tokens': 5, 'total_tokens': 112}}] - assistant
INFO - LLM Output: {'reply': 'Omeprazole', 'informal_name': 'Ompo', 'meta': [{'id': 'cmpl-a3e24cdb-531d-4a13-b119-9d1f64b854ec', 'object': 'text_completion', 'created': 1722603741, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 107, 'completion_tokens': 5, 'total_tokens': 112}}]} - assistant
INFO - LLM Output: {'reply': 'Omeprazole', 'informal_name': 'Ompo', 'meta': [{'id': 'cmpl-a3e24cdb-531d-4a13-b119-9d1f64b854ec', 'object': 'text_completion', 'created': 1722603741, 'model': '/Users/james/.cache/huggingface/hub/models--QuantFactory--Meta-Llama-3-8B-GGUF-v2/snapshots/7b15b4f184a48c035fbc5ac2876e5617b64ea885/Meta-Llama-3-8B.Q4_K_M.gguf', 'choices': [{'text': ' Omeprazole\n', 'index': 0, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 107, 'completion_tokens': 5, 'total_tokens': 112}}]} - assistant
INFO - Complete run in 29.67517066001892 seconds - assistant
INFO - Complete run in 29.67517066001892 seconds - assistant
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Paracetamol'] - OMOP_match
INFO - Calculating best OMOP matches for ['Paracetamol'] - OMOP_match
INFO - Best OMOP matches for ['Paracetamol'] calculated - OMOP_match
INFO - Best OMOP matches for ['Paracetamol'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Paracetamol', 'CONCEPT': None}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Paracetamol', 'CONCEPT': None}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Betamethasone'] - OMOP_match
INFO - Calculating best OMOP matches for ['Betamethasone'] - OMOP_match
INFO - Best OMOP matches for ['Betamethasone'] calculated - OMOP_match
INFO - Best OMOP matches for ['Betamethasone'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Betamethasone', 'CONCEPT': [{'concept_name': 'betamethasone', 'concept_id': 920458, 'vocabulary_id': 'RxNorm', 'concept_code': '1514', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'betamethasone 1 MG', 'concept_id': 920827, 'vocabulary_id': 'RxNorm', 'concept_code': '332616', 'concept_name_similarity_score': 83.87096774193549, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'betamethasone 2 MG', 'concept_id': 19108992, 'vocabulary_id': 'RxNorm', 'concept_code': '437948', 'concept_name_similarity_score': 83.87096774193549, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'betamethasone 6 MG', 'concept_id': 19112078, 'vocabulary_id': 'RxNorm', 'concept_code': '451972', 'concept_name_similarity_score': 83.87096774193549, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'betamethasone Enema', 'concept_id': 40018863, 'vocabulary_id': 'RxNorm', 'concept_code': '371051', 'concept_name_similarity_score': 81.25, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Betamethasone', 'CONCEPT': [{'concept_name': 'betamethasone', 'concept_id': 920458, 'vocabulary_id': 'RxNorm', 'concept_code': '1514', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'betamethasone 1 MG', 'concept_id': 920827, 'vocabulary_id': 'RxNorm', 'concept_code': '332616', 'concept_name_similarity_score': 83.87096774193549, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'betamethasone 2 MG', 'concept_id': 19108992, 'vocabulary_id': 'RxNorm', 'concept_code': '437948', 'concept_name_similarity_score': 83.87096774193549, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'betamethasone 6 MG', 'concept_id': 19112078, 'vocabulary_id': 'RxNorm', 'concept_code': '451972', 'concept_name_similarity_score': 83.87096774193549, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'betamethasone Enema', 'concept_id': 40018863, 'vocabulary_id': 'RxNorm', 'concept_code': '371051', 'concept_name_similarity_score': 81.25, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Fish Oil'] - OMOP_match
INFO - Calculating best OMOP matches for ['Fish Oil'] - OMOP_match
INFO - Best OMOP matches for ['Fish Oil'] calculated - OMOP_match
INFO - Best OMOP matches for ['Fish Oil'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Fish Oil', 'CONCEPT': [{'concept_name': 'fish oils', 'concept_id': 19110701, 'vocabulary_id': 'RxNorm', 'concept_code': '4419', 'concept_name_similarity_score': 94.11764705882352, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'fish oil (containing omega-3 acids)', 'concept_id': 35200165, 'vocabulary_id': 'RxNorm', 'concept_code': '2053495', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Fish Oil', 'CONCEPT': [{'concept_name': 'fish oils', 'concept_id': 19110701, 'vocabulary_id': 'RxNorm', 'concept_code': '4419', 'concept_name_similarity_score': 94.11764705882352, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}, {'concept_name': 'fish oil (containing omega-3 acids)', 'concept_id': 35200165, 'vocabulary_id': 'RxNorm', 'concept_code': '2053495', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Initialize the PostgreSQL connection based on the environment variables - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Connected to PostgreSQL database omop on monitor-uat.postgres.database.azure.com - OMOP_match
INFO - Calculating best OMOP matches for ['Omeprazole'] - OMOP_match
INFO - Calculating best OMOP matches for ['Omeprazole'] - OMOP_match
INFO - Best OMOP matches for ['Omeprazole'] calculated - OMOP_match
INFO - Best OMOP matches for ['Omeprazole'] calculated - OMOP_match
INFO - OMOP Output: [{'search_term': 'Omeprazole', 'CONCEPT': [{'concept_name': 'omeprazole', 'concept_id': 923645, 'vocabulary_id': 'RxNorm', 'concept_code': '7646', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - OMOP Output: [{'search_term': 'Omeprazole', 'CONCEPT': [{'concept_name': 'omeprazole', 'concept_id': 923645, 'vocabulary_id': 'RxNorm', 'concept_code': '7646', 'concept_name_similarity_score': 100.0, 'CONCEPT_SYNONYM': [], 'CONCEPT_ANCESTOR': [], 'CONCEPT_RELATIONSHIP': []}]}] - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
INFO - PostgreSQL connection closed. - OMOP_match
